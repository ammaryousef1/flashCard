{"ast":null,"code":"var _jsxFileName = \"/Users/hanaayousef/Downloads/all/react/memrise/momrise/momroise/src/redux/play/Play.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport './play.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Play = () => {\n  _s();\n  const mean = useSelector(state => state.mean);\n  const renderedwords = mean.map(mean => /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"flip-vertical-bck\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"\",\n      children: mean.means\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: mean.word.substring(0, 100)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"bottom\", {\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: renderedwords\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 11\n  }, this);\n};\n_s(Play, \"Ahj39CKhDa1RyYcLJIhJp/MKjYU=\", false, function () {\n  return [useSelector];\n});\n_c = Play;\nexport default Play;\nvar _c;\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"names":["useSelector","jsxDEV","_jsxDEV","Play","_s","mean","state","renderedwords","map","className","children","means","fileName","_jsxFileName","lineNumber","columnNumber","word","substring","_c","$RefreshReg$"],"sources":["/Users/hanaayousef/Downloads/all/react/memrise/momrise/momroise/src/redux/play/Play.js"],"sourcesContent":["import { useSelector } from \"react-redux\"\nimport './play.css'\n\nconst Play =  () => {\n    const mean = useSelector(state => state.mean)\n\n    const renderedwords = mean.map(mean => (\n           <main className=\"flip-vertical-bck\">\n                 <h2 className=\"\">{mean.means}</h2>\n               <h2>{mean.word.substring(0 , 100)}</h2>\n               <bottom>Next</bottom>\n          </main>\n    ))\n\n    return (\n      \n          <section>\n\n            {renderedwords}\n         \n          </section>\n        \n    )\n}\n\nexport default Play"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,IAAI,GAAIA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,IAAI,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,IAAI,CAAC;EAE7C,MAAME,aAAa,GAAGF,IAAI,CAACG,GAAG,CAACH,IAAI,iBAC5BH,OAAA;IAAMO,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC7BR,OAAA;MAAIO,SAAS,EAAC,EAAE;MAAAC,QAAA,EAAEL,IAAI,CAACM;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACpCb,OAAA;MAAAQ,QAAA,EAAKL,IAAI,CAACW,IAAI,CAACC,SAAS,CAAC,CAAC,EAAG,GAAG;IAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACvCb,OAAA;MAAAQ,QAAA,EAAQ;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAE/B,CAAC;EAEF,oBAEMb,OAAA;IAAAQ,QAAA,EAEGH;EAAa;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEN;AAGpB,CAAC;AAAAX,EAAA,CApBKD,IAAI;EAAA,QACOH,WAAW;AAAA;AAAAkB,EAAA,GADtBf,IAAI;AAsBV,eAAeA,IAAI;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}