{"ast":null,"code":"var _jsxFileName = \"/Users/hanaayousef/Downloads/all/react/memrise/momrise/momroise/src/Container/Cover/Cover.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Cover.css';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { wordAdded } from '../../redux/meanSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cover = props => {\n  _s();\n  let [word, setword] = useState(\"\");\n  let [mean, setmean] = useState(\"\");\n  let dispatch = useDispatch;\n  const onSaveMeanClicked = () => {\n    if (word && mean) {\n      dispatch(wordAdded({\n        id: nanoid(),\n        word,\n        mean\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \" Hello There, Welcome to our Flash Card App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"the\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"The Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"npt-meaning\",\n          type: \"text\",\n          onChange: e => {\n            setword(e.target.value);\n          },\n          value: word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"the\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"The meaning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"npt-meaning\",\n          type: \"text\",\n          onChange: e => {\n            setmean(e.target.value);\n          },\n          value: mean\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onclick: onSaveMeanClicked,\n          className: \"botton\",\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"Link\",\n          to: \"/play\",\n          children: \"play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), word]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 4\n  }, this);\n};\n_s(Cover, \"pb0jEPNjAQ9nTmBCy2csbBwIjM8=\");\n_c = Cover;\nexport default Cover;\nvar _c;\n$RefreshReg$(_c, \"Cover\");","map":{"version":3,"names":["React","useState","Link","useSelector","useDispatch","nanoid","wordAdded","jsxDEV","_jsxDEV","Cover","props","_s","word","setword","mean","setmean","dispatch","onSaveMeanClicked","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","onclick","to","_c","$RefreshReg$"],"sources":["/Users/hanaayousef/Downloads/all/react/memrise/momrise/momroise/src/Container/Cover/Cover.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './Cover.css'\nimport { Link } from 'react-router-dom'\nimport { useSelector , useDispatch } from 'react-redux'\nimport { nanoid } from '@reduxjs/toolkit'\nimport { wordAdded } from '../../redux/meanSlice'\nconst Cover = (props) => {\n  let [ word , setword ] = useState(\"\")\n  let [ mean , setmean ] = useState(\"\")\n\n  let dispatch = useDispatch\n\n  const onSaveMeanClicked = () => {\n    if ( word && mean ) {\n      dispatch(\n        wordAdded({\n          id: nanoid(),\n          word, \n          mean\n        })\n      )\n    }\n  }\n\n\n    return (\n   <section>\n      <h1 className=\"header\"> Hello There, Welcome to our Flash Card App</h1>\n        <form>\n          <div className='the'>\n          <label>The Word</label>\n          <input\n              id=\"npt-meaning\"\n              type=\"text\"\n              onChange={(e) => {setword(e.target.value)}}\n              value={word}\n          />\n          </div>\n          <div className='the'>\n          <label>The meaning</label>\n          <input\n              id=\"npt-meaning\"\n              type=\"text\"\n              onChange={(e) => {setmean(e.target.value)}}\n              value={mean}\n          />\n          </div>\n \n          <div className='button'>\n              <button type='button' onclick={onSaveMeanClicked} className='botton'>submit</button>\n              <Link className='Link' to=\"/play\">play</Link>\n          </div>\n\n      </form> \n        {word}\n   </section>\n    )\n  \n  \n}\n\nexport default Cover"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}